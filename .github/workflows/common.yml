name: Reusable workflow to run golang test and linter, and build the image

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
    secrets:
      DOCKER_USER:
        required: true
      DOCKER_PASS:
        required: true
      DOCKER_REGISTRY:
        required: true

jobs:
  code-check:
    name: Running codechecks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          python-version: 3.8

      - name: run unit tests
        run: |
          make test

      - name: run linter
        run: |
          make lint
          
      - name: Run Bandit
        run: |
          make bandit

  build:
    name: Build and Push Image
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ inputs.image_tag }}
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
    needs: [code-check]
    if: contains(needs.*.result, 'success')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}  
          tags: | 
            ${{ env.DOCKER_REGISTRY }}:${{ env.IMAGE_TAG }}
          build-args: |
            IMAGE_TAG=${{ env.IMAGE_TAG }}
            DOCKER_REGISTRY=${{ env.DOCKER_REGISTRY }}
      
      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations
          image: ${{ env.DOCKER_REGISTRY }}:${{ env.IMAGE_TAG }}
          only-severities: critical,high
          ignore-base: true
          ignore-unchanged: true
          only-fixed: true
          exit-code: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

